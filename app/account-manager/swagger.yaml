swagger: '2.0'
info:
  version: '1.0.0'
  title: BRL - Account Manager
  description: Account Manager module's API that exposes account and project functionality
  contact:
    name: Carbono team
    email: team@carbono.io
    url: http://carbono.io
host: localhost:3000
basePath: /account-manager
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /account:
    post:
      description: Creates a new account.
      operationId: createAccount
      produces:
        - application/json
      parameters:
        - name: account
          in: body
          description: Account to create
          required: true
          schema:
            $ref: '#/definitions/newAccount'
      responses:
        '200':
          description: account created
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
  /account/{id}:
    get:
      description: Returns an account user based on a ID, if the user does not have access to the pet
      operationId: findAccountById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
      responses:
        '200':
          description: account response
          schema:
            $ref: '#/definitions/account'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
  /projects:
    post:
      description: Creates a new project.
      operationId: createProject
      produces:
        - application/json
      parameters:
        - name: project
          in: body
          description: Project to create
          required: true
          schema:
            $ref: '#/definitions/newProject'
      responses:
        '200':
          description: project created
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
  /projects/{safeName}:
    get:
      description: Retrieves an existing project.
      operationId: findProjectById
      produces:
        - application/json
      parameters:
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string
      responses:
        '200':
          description: project response
          schema:
            $ref: '#/definitions/retrieveProject'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Updates data of an existing project
      operationId: updateProject
      produces:
        - application/json
      parameters:
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string        
        - name: project
          in: body
          description: Project data to be updated
          required: true
          schema:
            $ref: '#/definitions/updateProject'
      responses:
        '200':
          description: project updated
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Deletes an existing project.
      operationId: deletesProject
      produces:
        - application/json
      parameters:
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string
      responses:
        '200':
          description: project deleted
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  newAccount:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
  retrieveProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              $ref: '#/definitions/project'
  updateProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - safeName
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Description of the project
                safeName:
                  type: string
                  description: Unique namespace of the project
  newProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - owner
                - name
                - safeName
              properties:
                name:
                  type: string
                  description: Name of the project
                safeName:
                  type: string
                  description: Unique namespace of the project
                owner:
                  type: string
                  description: Id that identifies the owner of this project

  account:
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      password:
        type: string
  project:
    properties:
      safeName:
        type: string
      owner:
        type: string
      name:
        type: string
      developmentContainerId:
        type: string
  errorModel:
    properties:
      id:
        type: string
        description: Id that identifies the unique error message
      apiVersion:
        type: string
        description: The version of the api
      error:
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int64
            description: The error code (i.e. 400, 404)
          message:
            type: string
            description: The error message