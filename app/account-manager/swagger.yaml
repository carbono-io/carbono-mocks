swagger: '2.0'
info:
  version: '1.0.0'
  title: BRL - Account Manager
  description: Account Manager module's API that exposes account and project functionality
  contact:
    name: Carbono team
    email: team@carbono.io
    url: http://carbono.io
host: localhost:3000
basePath: /account-manager
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /profiles:
    post:
      description: Creates a new profile/user.
      operationId: createAccount
      produces:
        - application/json
      parameters:
        - name: profile
          in: body
          description: Profile to create
          required: true
          schema:
            $ref: '#/definitions/newProfile'
      responses:
        '201':
          description: Profile created
          schema:
            $ref: '#/definitions/userProfile'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
  /profiles/{code}:
    get:
      description: Returns an user profile based on a ID
      operationId: findProfileById
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: Profile code
          required: true
          type: string
      responses:
        '200':
          description: Profile found
          schema:
            $ref: '#/definitions/userProfile'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Profile Not Found
          schema:
            $ref: '#/definitions/errorModel'
  /users:
    get:
      description: Gets user information
      operationId: getUserInfo
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
      responses:
        '200':
          description: User found
          schema:
            $ref: '#/definitions/userProfile'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  User not found
          schema:
            $ref: '#/definitions/errorModel'
  /login:
    post:
      description: Validates user login info
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: login
          in: body
          description: User's login info
          required: true
          schema:
            $ref: '#/definitions/loginInfo'
      responses:
        '200':
          description: Login Success
          schema:
            $ref: '#/definitions/userEmailCode'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Invalid email or password
          schema:
            $ref: '#/definitions/errorModel'
  /projects:
    post:
      description: Creates a new project.
      operationId: createProject
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
        - name: project
          in: body
          description: Project to create
          required: true
          schema:
            $ref: '#/definitions/newProject'
      responses:
        '201':
          description: Project created
          schema:
            $ref: '#/definitions/projectResponse'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
    get:
      description: List all projects from a user
      operationId: listProjects
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
      responses:
        '200':
          description: Operation success
          schema:
            $ref: '#/definitions/getProject'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
  /projects/{safeName}:
    get:
      description: Gets an existing project.
      operationId: findProjectById
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string
      responses:
        '200':
          description: Project response
          schema:
            $ref: '#/definitions/getProject'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description:  Access Denied
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Updates data of an existing project
      operationId: updateProject
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string        
        - name: project
          in: body
          description: Project data to be updated
          required: true
          schema:
            $ref: '#/definitions/updateProject'
      responses:
        '201':
          description: project updated
          schema:
            $ref: '#/definitions/projectResponse'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description:  Access Denied
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Deletes an existing project.
      operationId: deletesProject
      produces:
        - application/json
      parameters:
        - name: crbEmail
          in: header
          description: Carbono user email
          required: true
          type: string
        - name: safeName
          in: path
          description: Project Id
          required: true
          type: string
      responses:
        '200':
          description: project deleted
          schema:
            $ref: '#/definitions/projectResponse'
        '400':
          description:  Malformed request
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description:  Access Denied
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description:  Not Found
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  loginInfo:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: Email of the user
                password:
                  type: string
                  description: Password of the user
  userEmailCode:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - email
                - code
              properties:
                email:
                  type: string
                  description: Email of the User
                code:
                  type: string
                  description: Code of the Profile
  newProfile:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
  updateProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Description of the project
  newProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Description of the project
  getProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              properties:
                project:
                  properties:
                    code:
                      type: string
                      description: The unique code of the project
                    safeName:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    access:
                      type: string
                      description: The access level of user
                    owner:
                      type: boolean
                      description: Indicates if the user owns the project
  projectResponse:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              $ref: '#/definitions/project'

  profile:
    required:
      - code
      - name
      - email
    properties:
      code:
        type: string
      name:
        type: string
      email:
        type: string
  userProfile:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              $ref: '#/definitions/profile'
  
  project:
    properties:
      code:
        type: string
        description: The unique code of the project
      safeName:
        type: string
      name:
        type: string
      description:
        type: string
  
  errorModel:
    properties:
      id:
        type: string
        description: Id that identifies the unique error message
      apiVersion:
        type: string
        description: The version of the api
      error:
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int64
            description: The error code (i.e. 400, 404)
          message:
            type: string
            description: The error message