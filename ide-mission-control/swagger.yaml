swagger: '2.0'
info:
  version: 1.0.0
  title: Mission Control
  description: |
    Mission Control module's API for communication between DCM (Development Container Manager), CM ( Code Machine) and IDE.
host: localhost:3000
basePath: /ide-mission-control
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  - text/html
paths:
  /projects:
    post:
      description: Creates a new project
      operationId: createProject
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Access token
          required: true
          type: string
        - name: project
          in: body
          description: Project info to be created
          required: true
          schema:
            $ref: '#/definitions/newProject'
      responses:
        201:
          description:  Project was successfuly created
          schema:
            $ref: '#/definitions/projectResponse'
        400:
          description:  Malformed request
          schema:
            $ref: '#/definitions/ResponseError'
        403:
          description: Forbidden - Access Denied
          schema:
            $ref: '#/definitions/ResponseError'
  /projects/{code}/resources/marked/{fileName}:
    get:
      summary: Retrieves a marked file {fileName} from a Project using the identifier {code}.
      parameters:
        - name: code
          in: path
          type: string
          description: Id of the project
          required: true
        - name: fileName
          in: path
          type: string
          description: Name of a file
          required: true
      responses:
        200:
          description:  Retrieves a marked HTML file if it fileName is HTML or
            a pure file
          schema:
            type: file
        400:
          description:  fileName cannot be null
          schema:
            $ref: '#/definitions/ResponseError'
        404:
          description:  File not found
          schema:
            $ref: '#/definitions/ResponseError'
  /projects/{code}/resources/clean/{fileName}:
    get:
      summary: Retrieves a clean file {fileName} from a Project using the identifier {code}.
      parameters:
        - name: code
          in: path
          type: string
          description: Id of the project
          required: true
        - name: fileName
          in: path
          type: string
          description: Name of a file
          required: true
      responses:
        200:
          description:  Retrieves a clean HTML file if it fileName is HTML or
            a pure file
          schema:
            type: file
        400:
          description:  fileName cannot be null
          schema:
            $ref: '#/definitions/ResponseError'
        404:
          description:  File not found
          schema:
            $ref: '#/definitions/ResponseError'

definitions:
  projectResponse:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - project
              properties:
                project:
                  required:
                    - code
                    - safeName
                    - name
                    - description
                  properties:
                    code:
                      type: string
                      description: The unique code of the project
                    safeName:
                      type: string
                      description: The unique safeName (namespace) of the project for the given owner
                    name:
                      type: string
                    description:
                      type: string

  newProject:
    properties:
      id:
        type: string
        description: Id that identifies the unique success message
      apiVersion:
        type: string
        description: The version of the api
      data:
        required:
          - id
          - items
        properties:
          id:
            type: string
            description: Id that identifies the unique requested data
          items:
            type: array
            description: An array of data items
            items:
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  description: Name of the project
                description:
                  type: string
                  description: Description of the project
  ResponseError:
    properties:
      id:
        type: string
        description: Id that identifies the unique error message
      apiVersion:
        type: string
        description: The version of the api
      error:
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int64
            description: The error code (i.e. 400, 404)
          message:
            type: string
            description: The error message
